<?php
/**
Copyright (c) 2009, Shane Hill <shanehill00@gmail.com>
All rights reserved.

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

    * Redistributions of source code must retain
      the above copyright notice, this list of conditions
      and the following disclaimer.

    * Redistributions in binary form must reproduce the above copyright notice,
      this list of conditions and the following disclaimer in the documentation
      and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

*/

return array(
            // autoMove tells WebDFS whther or not to automatically move data
            // when the configs change and a GET cannot find data.
            // if this value evaluates to true, then whenever WebDFS cannot find
            // a file for a GET request, it will look in the old location (if there is an old location)
            // and if it can find it there it will move it from the
            // old location to the new location and return the image to the client.
            // if automove is false then a 404 is returned to the client if WebDFS
            // cannot find the requested file
            'autoMove' => false,

            //  the path that the fileinfo extension will use
            'magicDbPath' => '/sw/share/file/magic',

            // this setting will tell WebDFS to disconnect the client
            // after key points in propagation of an action.
            //
            // For example we disconnect the client before continung with replicating
            // an uploaded file so that the client will NOT hang on and wait for us to complete
            // communication with a completely different node.
            'disconnectAfterSpooling' => true,

            // The url for THIS node which is mapped to the dfs.php file.
            // This can be a direct access or maybe something like an apache rewrite rule.
            // This is the url to which all of the PUTs, GETs, MOVEs and DELETEs are sent.
            'thisProxyUrl' =>  'http://192.168.0.2:80/dfs.php',

            // the number of bytes to read when spooling a file to disk
            'spoolReadSize' => 2048,

            // the stream to read from when handling uploads
            // most of the time you will not have to change this
            // this setting is mostly useful when running the tests
            // against the core test class
            'inputStream' => 'php://input',

            // whether or not to write debug messages to the error log
            // this is mostly useful to see the propagation of an action
            // between nodes.
            'debug' => true,

            // the data portion of the config is the part that is used for mapping objects to nodes
            // the data element holds an array of configs where the config located at index 0 is the most current
            // config in use and the other configs are prior configs.
            //
            // some of the reasons you might be adding a new config entry are:
            //
            // * when you add or remove servers
            // * you need to change the weighting between clusters
            // * you are changing to new Locator algorithm
            'data' => array(
                array(

                    // boolean indicating whether or not to use the dio libraries
                    // regardless if the dio lib exists and is loaded
                    // if the dio libs are bot prsent then this setting has no effect
                    'useDio' => false,

                    // boolean indicating whether or not to fsync
                    // after writing the first replicant
                    // this setting only has an effect if the
                    // dio lib is installed and the useDio config setting
                    // is set to true
                    'fsync' => false,

                    // The class name of the locator class to be used for this data config
                    'locatorClassName' => 'WebDFS_DataLocator_RUSHr',

                    // the path to the file that comntains the locatorClassName class code
                    'locatorClassPath' => 'WebDFS/DataLocator/RUSHr.php',

                    //=========================================================
                    // THE STORAGE AND TEMP ROOTS SHOULD NOT BE THE SAME VALUE
                    //=========================================================
                    // this is the directory where files will be stored permanently
                    // this directory should be writable and readable by the webserver
                    // this directory needs to be created by you.  WebDFS will not create it.
                    'storageRoot' => '/tmp/testData',

                    // this is the directory where files will be stored temporarily
                    // for example, when we are accepting an upload, or when we are getting a file
                    // from a remote node to fulfill a GET request.
                    //
                    // this directory should be writable and readable by the webserver
                    // this directory needs to be created by you.  WebDFS will not create it.
                    'tmpRoot' => '/tmp/tempData',

                    // this is the number iof replicants to make
                    // this number CANNOT exceed the number of nodes
                    // in the first cluster of the cluster config below
                    // the check_reqs.php file will check your config
                    // to be sure that this value is appropriate
                    'replicationDegree' => 2,

                    // the clusters config is an array where each element contains
                    // an array which contains two keys:
                    //      weight - this is the weight given to this cluster (not a particular node)
                    //               if you need to weight a single server, then you need to create a
                    //               cluster for that server alone and give it a weight
                    //
                    //      nodes - this is an array of arrays where each nested array represents
                    //              a server / node / storage system each node structure contains
                    //              the information necessary for accessing that node in the system.
                    //              currently the only key in the node structure is 'proxyUrl'.
                    //              The characteristics of the value of the 'proxyUrl' element
                    //              are the same as described above for the 'thisproxyUrl' element
                    //
                    //              the static url is a base url for creating static urls
                    //              for fetching data (doing GET rquests).  this has been added
                    //              for efficiency sake and does not have to be used.
                    //              so this means that the getPaths call to the locator class will return
                    //              two sets of urls,  one will be in the form:
                    //
                    //                      http://<domain>/dfs.php/filename
                    //
                    //              the others will be in the form:
                    //
                    //                      http://<domain>/nn/nn/filename
                    //                      each n in the url above denotes a single integer
                    //                      between 0 and 9.  the above urls will represent
                    //                      a static or direct path to the file
                    //                      (if you have setup your web server correctly)
                    //
                    //
                    'clusters' => array(
                        // cluster 1
                        array(
                            'weight' => 1,
                            'nodes' => array(
                                array(
                                    'proxyUrl' => 'http://192.168.0.2:80/dfs.php',
                                    'staticUrl' => 'http://192.168.0.2:80'
                            ), // cluster 1 node 1 (1)
                                array(
                                    'proxyUrl' => 'http://192.168.0.6:80/dfs.php',), // cluster 1 node 2 (2)
                                    'staticUrl' => 'http://192.168.0.6:80'
                            ),
                         ),
                      ),
                  ),
              ),

              // below are the error and debug message templates, you probably do not need to change anything below this line
            'debugMsgs' => array(
                'moveDeleteAlike' => 'DEBUG: nodes were alike in delete for %s',
                'moveCreateAlike' => "DEBUG: nodes were alike in create for %s",
                'moveFinished'    => "DEBUG: finished move - checking if we are the last node in the replication chain",
                'autoMove'        => "DEBUG: facilitating auto move",
                'moveStartDelete' => "DEBUG: replica %s : forwarded a move cmd (start) in delete context to %s",
                'sendDeleteForMove' => "DEBUG: replica %s : forwarded a move cmd in delete context to %s",
                'sendStartMove'   => "DEBUG: replica %s : forwarded a move cmd in start context to %s moveConfigIndex: %s configIndex: %s",
                'sendDataToStartMove' => "DEBUG: forwarded %s to start a move cmd in create context to %s",
                'sendDataForMove' => "DEBUG: replica %s : copied data and forwarded a move cmd in create context to %s",
             ),

            'errMsgs' => array(
                'doDeleteForMove' => "ERROR: action: %s - context: %s - name: %s - %s - %s",
                'doCreateForMove' => "ERROR: action: %s - context: %s - name: %s - %s - %s",
                'doStartForMove'  => "ERROR: action: %s - context: %s - name: %s - %s - %s",
                'putData'         => "ERROR: action: %s - name: %s - %s - %s",
                'putForward'      => "ERROR: action: %s - name: %s - %s - %s",
                'deleteData'      => "ERROR: action: %s - name: %s - %s - %s",
                'deleteForward'   => "ERROR: action: %s - name: %s - %s - %s",
                'deleteSend'      => "ERROR: replica %s : forwarding a delete command to %s failed using curl.  curl error code: %s curl error message: %s |||| response: %s",
                'sendDataForPut'  => "ERROR: replica: %s - sending data to %s via curl failed.  curl error code: %s curl error message: %s |||| response: %s",
                'startDeleteForMove' => "ERROR: replica %s : forwarding a move cmd (start) in delete context to %s failed using curl.  curl error code: %s curl error message: %s |||| response: %s",
                'startDeleteForMoveEmptyForward' => "ERROR: could not start a delete for move.  it appears as if the forwardInfo is empty",
                'sendDeleteForMove' => "ERROR: replica %s : forwarding a move cmd in delete context to %s failed using curl.  curl error code: %s curl error message: %s |||| response: %s",
                'sendStartMove'   => "ERROR: replica %s : forwarding a move cmd in start context to %s failed using curl.  curl error code: %s curl error message: %s |||| response: %s",
                'sendDataToStartMove' => "ERROR: replica: %s - sending data for a move in create context to %s via curl failed.  curl error code: %s curl error message: %s |||| response: %s",
                'sendDataForMove' => "ERROR: replica: %s - sending data for a move in create context to %s via curl failed.  curl error code: %s curl error message: %s |||| response: %s",
                'noNodeFound'  => "ERROR: function: %s - file: %s - line: %s - iterated all of the nodes and could not find a good one.  maybe your configuration is bad. be sure to check all of the proxy urls and make sure they are correct",
                'selfHealNoFile'  => "ERROR: could not open file %s when attempting to self heal",
                'delete500'       => "error when processing delete command",
                'selfHeal'       => "ERROR: something bad happened during a self healing process.  %s, %s",
            ),

            'exceptionMsgs' => array(
                'incompleteWrite' => "EXCEPTION: Did not write all data!  Expected: [%s] Got: [ %s ]",
                'failedRename' => "EXCEPTION: final move operation failed when copying %s to %s",
                'failedUnlink' => "EXCEPTION: could not unlink %s",
                'handleDeleteDataError' => "EXCEPTION: %s : %s : $%s : %s",
                'handleForwardDeleteError' => "EXCEPTION: %s : %s : $%s : %s",
                'handleMoveDeleteError' => "EXCEPTION: %s : %s : $%s : %s",
                'handleMoveCreateError' => "EXCEPTION: %s : %s : $%s : %s",
                'handleMoveStartError' => "EXCEPTION: %s : %s : $%s : %s",
                'sendDataToStartMoveNoFile' => "EXCEPTION: received command in start context to move %s but cannot find file!",
                'handleSpoolError' => "EXCEPTION: errno: %s - errmsg: %s - errfile: %s - errline: %s",
                'handleForwardDataError' => "EXCEPTION: errno: %s - errmsg: %s - errfile: %s - errline: %s",
                'sendDataForPut' => "EXCEPTION: Cannot reliably determine the file size for %s",
                'selfHealDelete'       => "EXCEPTION: failed while deleting during a self healing process: %s",
            ),

            'reqMethodSettings' => array(
                'get' => array(
                    'require' => 'WebDFS/Get.php',
                    'class' => 'WebDFS_Get',
                ),

                'put' =>  array(
                    'require' => 'WebDFS/Put.php',
                    'class' => 'WebDFS_Put',
                ),

                'delete' => array(
                    'require' => 'WebDFS/Delete.php',
                    'class' => 'WebDFS_Delete',
                ),

                'move' => array(
                    'require' => 'WebDFS/Move.php',
                    'class' => 'WebDFS_Move',
                )
            ),
        );
